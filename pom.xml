<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>nl.example.pig</groupId>
    <artifactId>demo-project</artifactId>
    <version>0.1-SNAPSHOT</version>

    <name>Demonstration project for Pig</name>

    <properties>
        <jdkLevel>1.7</jdkLevel>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.build.outputEncoding>UTF-8</project.build.outputEncoding>

        <packagedDirectoryName>demo-project-${project.version}</packagedDirectoryName>
        
        <hadoop.version>2.3.0</hadoop.version>
        <pig.version>0.13.0</pig.version>
    </properties>

    <dependencies>

        <!--We need PIG for a pig project-->
        <dependency>
            <groupId>org.apache.pig</groupId>
            <artifactId>pig</artifactId>
            <version>${pig.version}</version>
            <classifier>h2</classifier> <!-- This is EXTREMELY Important -->
            <scope>provided</scope>
        </dependency>

        <!--Which in turn needs Hadoop-->
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-client</artifactId>
            <version>${hadoop.version}</version>
            <scope>provided</scope>
        </dependency>


        <!-- Get a PIG Loader from Maven Central -->
        <dependency>
            <groupId>nl.basjes.parse.httpdlog</groupId>
            <artifactId>httpdlog-pigloader</artifactId>
            <version>1.8</version>
        </dependency>

        <!--Need to choose the SLF4J backend-->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.7.5</version>
        </dependency>

        <!--Testing the UDFs-->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>

        <!--And testing the script itself-->
        <dependency>
            <groupId>org.apache.pig</groupId>
            <artifactId>pigunit</artifactId>
            <version>${pig.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jline</groupId>
            <artifactId>jline</artifactId>
            <version>0.9.94</version>
            <scope>test</scope>
        </dependency>


    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <source>${jdkLevel}</source>
                    <target>${jdkLevel}</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.1.2</version>
            </plugin>


        </plugins>
    </build>

    <profiles>
        <profile>
            <id>package-targz</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <descriptors>
                                <descriptor>src/main/assembly/assembly.xml</descriptor>
                            </descriptors>
                            <archive>
                                <addMavenDescriptor>false</addMavenDescriptor>
                            </archive>
                        </configuration>
                        <executions>
                            <execution>
                                <id>make-assembly</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>package-azkaban</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <descriptors>
                                <descriptor>src/main/assembly/azkaban.xml</descriptor>
                            </descriptors>
                            <archive>
                                <addMavenDescriptor>false</addMavenDescriptor>
                            </archive>
                        </configuration>
                        <executions>
                            <execution>
                                <id>make-assembly</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>package-rpm</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>rpm-maven-plugin</artifactId>
                        <version>2.1.2</version>
                        <configuration>
                            <license>Apache License v2.0</license>
                            <packager>Niels Basjes</packager>
                            <group>Demonstrations</group>
                            <needarch>noarch</needarch>
                            <summary>Silly project that uses Apache Pig</summary>
                            <description>
                                This really does nothing usefull other than show how things can be setup in combination with Apache Pig.
                            </description>
                            <requires>
                                <require>pig &gt;= ${pig.version}</require>
                            </requires>
                            <mappings>
                                <mapping>
                                    <directory>/opt/${packagedDirectoryName}/</directory>
                                    <username>root</username>
                                    <groupname>root</groupname>
                                    <filemode>755</filemode>
                                    <sources>
                                        <source>
                                            <location>src/main/bash/</location>
                                        </source>
                                    </sources>
                                </mapping>
                                <mapping>
                                    <directory>/opt/${packagedDirectoryName}/pig</directory>
                                    <username>root</username>
                                    <groupname>root</groupname>
                                    <filemode>644</filemode>
                                    <sources>
                                        <source>
                                            <location>src/main/pig/</location>
                                        </source>
                                    </sources>
                                </mapping>
                                <mapping>
                                    <directory>/opt/${packagedDirectoryName}/etc</directory>
                                    <username>root</username>
                                    <groupname>root</groupname>
                                    <filemode>644</filemode>
                                    <sources>
                                        <source>
                                            <location>src/main/resources/</location>
                                        </source>
                                    </sources>
                                </mapping>
                                <mapping>
                                    <directory>/opt/${packagedDirectoryName}/lib</directory>
                                    <username>root</username>
                                    <groupname>root</groupname>
                                    <filemode>644</filemode>
                                    <dependency />
                                </mapping>

                                <!-- Put the compiled UDFs and such in the lib dir -->
                                <mapping>
                                    <directory>/opt/${packagedDirectoryName}/lib</directory>
                                    <username>root</username>
                                    <groupname>root</groupname>
                                    <filemode>644</filemode>
                                    <sources>
                                        <source>
                                            <location>target/${project.build.finalName}.jar</location>
                                        </source>
                                    </sources>
                                </mapping>

                            </mappings>
                        </configuration>

                        <executions>
                            <execution>
                                <goals>
                                    <goal>attached-rpm</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
